# -*- coding: utf-8 -*-
"""MNIST.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1G9Rapt7doA1HMUlaDM1047OtRDcP7sPn
"""

import tensorflow as tf
import tensorflow.keras as keras
import numpy as np

mnist = tf.keras.datasets.mnist
(x_train,y_train),(x_test,y_test) = mnist.load_data()

x_train.shape

y_train.shape

x_test.shape

y_test.shape

y_train[89]

import matplotlib.pyplot as plt
plt.imshow(x_train[45])
plt.show

model = tf.keras.Sequential()
model.add(tf.keras.layers.Flatten())
model.add(tf.keras.layers.Dense(512, activation= 'relu'))
model.add(tf.keras.layers.Dense(10, activation= 'softmax'))

model.compile(optimizer= 'adam', loss = 'sparse_categorical_crossentropy', metrics= 'accuracy')

history = model.fit(x_train, y_train, epochs= 5)

y_pred = model.predict_classes(x_test)
y_pred

from sklearn.metrics import accuracy_score, confusion_matrix

accuracy_score(y_pred,y_test)

confusion_matrix(y_pred, y_test)

plt.plot(history.history['accuracy'])

model.get_weights()

model.save('model_integer.h5')